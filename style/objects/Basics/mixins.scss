
@mixin zdss-clickable (){
    cursor: pointer;
}

/*

Makes any element rounded

*/

@mixin zdss-rounded($radius: $border-radius){
    border-radius: $radius;
}
@mixin zdss-rounded-left($radius: $border-radius){
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
}
@mixin zdss-rounded-right($radius: $border-radius){
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
}
@mixin zdss-rounded-top($radius: $border-radius){
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
}
@mixin zdss-rounded-bottom($radius: $border-radius){
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
}

@mixin zdss-arrow($size: 40px){
    width: $size;
    height: $size;
    border-top: 2px solid $zdss-color-iron;
    border-right: 2px solid $zdss-color-iron;
    content: ' ';
    transform: rotate(45deg);
    &:hover {
        border-color: white;
    }
}

@mixin zdss-shadow(){
    box-shadow: 3px 3px 3px 0px rgba(0,0,0,0.3);
}

@mixin zdss-disabled() {
    color: $zdss-color-iron;
}

/*
    
Makes the text shorten with dots, if it exeeds the size of container

<div class="zdss-overflow-with-dots zdss-block-dark" style="width: 150px;">
    Lorem ipsum dolor, sit amet. Lorem ipsum dolor, sit amet. 
</div>

*/

@mixin zdss-overflow-with-dots(){
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/*

Default grid

Attention! This grid is build on "display-block" param, so be careful, don't use whitespaces between the columns!
<div class="grid" style="border:1px solid #ddd">
    <div class="zdss-col3" style="border:1px solid #ddd">3/12 width column
</div><div class="zdss-col5" style="border:1px solid #ddd">5/12 width column
</div><div class="zdss-col4" style="border:1px solid #ddd">4/12 width column</div> 
</div>

*/

    
@mixin zdss-col($size: 1, $colnum: 12){
    display: inline-block; 
    width: unquote(round(($size/$colnum)*100) + '%');
    vertical-align: top;
}

@mixin zdss-col1() {
    @include zdss-col();
}

@mixin zdss-col2() {
    @include zdss-col(2);
}

@mixin zdss-col3() {
    @include zdss-col(3);
}

@mixin zdss-col4() {
    @include zdss-col(4);
}

@mixin zdss-col5() {
    @include zdss-col(5);
}

@mixin zdss-col6() {
    @include zdss-col(6);
}

@mixin zdss-col7() {
    @include zdss-col(7);
}

@mixin zdss-col8() {
    @include zdss-col(8);
}

@mixin zdss-col9() {
    @include zdss-col(9);
}

@mixin zdss-col10() {
    @include zdss-col(10);
}

@mixin zdss-col11() {
    @include zdss-col(11);
}

@mixin zdss-col12() {
    @include zdss-col(12);
}

/*

Responsive grid column. Should be used by other mixins.

 

*/

    
@mixin zdss-rcol($big-size: 1, $medium-size: 3, $small-size: 12, $colnum: 12){
    display: inline-block; 
    vertical-align: top;
    @media screen and (max-width: 639px){ 
        width: unquote(floor(($small-size/$colnum)*100) + '%');
    }
    @media screen and (max-width: 1023px) and (min-width: 640px){
        width: unquote(floor(($medium-size/$colnum)*100) + '%');
    }
    @media screen and (min-width: 1024px){
        width: unquote(floor(($big-size/$colnum)*100) + '%');
    }
}

/*

The same mixin, but it acceps percent values of width

 

*/
    
@mixin zdss-rcolp($big-size: 100, $medium-size: 33, $small-size: 100){
    display: inline-block; 
    vertical-align: top;
    @media screen and (max-width: 639px){ 
        width: unquote($small-size + '%');
    }
    @media screen and (max-width: 1023px) and (min-width: 640px){
        width: unquote($medium-size + '%');
    }
    @media screen and (min-width: 1024px){
        width: unquote($big-size + '%');
    }
}

/*

An example of responsive grid. Classname "zdss-rcol-4-6-12" means that the column will be 4/12 width on the large screens, 
6/12(a half) on the medium screens(640 to 1024px), and 12/12(full width) on the small screens.
<div>
    <div class="zdss-rcol-4-6-12" style="border:1px solid #ddd">1/3, 1/2, 1</div><div 
        class="zdss-rcol-4-6-12" style="border:1px solid #ddd">1/3, 1/2, 1</div><div 
        class="zdss-rcol-4-12-12" style="border:1px solid #ddd">1/3, 1, 1</div>
</div>

*/

@mixin zdss-rcol-4-6-12(){
    @include zdss-rcol(4, 6, 12);
}

@mixin zdss-rcol-4-12-12(){
    @include zdss-rcol(4, 6, 12);
}

@mixin zdss-rcolp-33-50-100(){
    @include zdss-rcolp(33, 50, 100);
}

